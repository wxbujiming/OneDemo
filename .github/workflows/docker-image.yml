name: Publish to GitHub Packages

# 触发条件：当代码推送到仓库时触发（可修改为特定分支）
on:
  push:
    branches: [ "main" ]  # 【需要修改】替换为你的目标分支，如"master"或保留默认所有分支

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # 使用最新版Ubuntu系统
    steps:
      # 步骤1: 检出代码到工作目录
      - name: 检出代码
        uses: actions/checkout@v4  # 使用官方checkout动作，版本v4

      # 步骤2: 设置Docker Buildx（增强构建能力，支持多平台等）
      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 步骤3: 生成当前时间戳（新增步骤：用于镜像标签）
      - name: 设置构建时间戳
        run: echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV  # 格式：年月日时分秒（如20250822173045）

      # 步骤4: 登录到容器仓库（根据实际使用的仓库类型选择并修改）
      - name: 登录到Docker仓库
        uses: docker/login-action@v3
        with:
          
          # 选项2: GitHub Container Registry (无需额外secrets，使用内置GITHUB_TOKEN)
          # registry: ghcr.io
          # username: ${{ github.actor }}          
          # password: ${{ secrets.GITHUB_TOKEN }}          
          


      # 步骤5：构建并推送带有时间戳标签的Docker镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .  # Build context is current directory
          push: true  # Enable push
          tags: |
            ghcr.io/${{ github.actor }}/onedemo:${{ env.TIMESTAMP }}  # Timestamp tag (e.g., 20250822173045)
            ghcr.io/${{ github.actor }}/onedemo:latest                # Keep latest tag
            ghcr.io/${{ github.actor }}/onedemo:${{ github.sha }}     # Keep commit SHA tag

